!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AIWA_RC_T501	IRremote.h	/^		AIWA_RC_T501,$/;"	e	enum:__anon1
AIWA_RC_T501_BITS	ir_Aiwa.cpp	16;"	d	file:
AIWA_RC_T501_BIT_MARK	ir_Aiwa.cpp	22;"	d	file:
AIWA_RC_T501_HDR_MARK	ir_Aiwa.cpp	20;"	d	file:
AIWA_RC_T501_HDR_SPACE	ir_Aiwa.cpp	21;"	d	file:
AIWA_RC_T501_HZ	ir_Aiwa.cpp	15;"	d	file:
AIWA_RC_T501_ONE_SPACE	ir_Aiwa.cpp	23;"	d	file:
AIWA_RC_T501_POST_BITS	ir_Aiwa.cpp	18;"	d	file:
AIWA_RC_T501_PRE_BITS	ir_Aiwa.cpp	17;"	d	file:
AIWA_RC_T501_SUM_BITS	ir_Aiwa.cpp	19;"	d	file:
AIWA_RC_T501_ZERO_SPACE	ir_Aiwa.cpp	24;"	d	file:
BITS	ir_Denon.cpp	22;"	d	file:
BITS	ir_Template.cpp	105;"	d	file:
BIT_MARK	ir_Denon.cpp	27;"	d	file:
BIT_MARK	ir_Template.cpp	110;"	d	file:
BLINKLED	IRremoteInt.h	74;"	d
BLINKLED	IRremoteInt.h	79;"	d
BLINKLED	IRremoteInt.h	84;"	d
BLINKLED	IRremoteInt.h	89;"	d
BLINKLED_OFF	IRremoteInt.h	76;"	d
BLINKLED_OFF	IRremoteInt.h	81;"	d
BLINKLED_OFF	IRremoteInt.h	86;"	d
BLINKLED_OFF	IRremoteInt.h	91;"	d
BLINKLED_ON	IRremoteInt.h	75;"	d
BLINKLED_ON	IRremoteInt.h	80;"	d
BLINKLED_ON	IRremoteInt.h	85;"	d
BLINKLED_ON	IRremoteInt.h	90;"	d
CMT_PPS_VAL	IRremoteInt.h	485;"	d
CMT_PPS_VAL	IRremoteInt.h	487;"	d
DBG_PRINT	IRremote.h	130;"	d
DBG_PRINT	IRremote.h	133;"	d
DBG_PRINTLN	IRremote.h	131;"	d
DBG_PRINTLN	IRremote.h	134;"	d
DEBUG	IRremote.h	124;"	d
DECODE_AIWA_RC_T501	IRremote.h	55;"	d
DECODE_DENON	IRremote.h	73;"	d
DECODE_DISH	IRremote.h	67;"	d
DECODE_JVC	IRremote.h	46;"	d
DECODE_LG	IRremote.h	58;"	d
DECODE_MITSUBISHI	IRremote.h	64;"	d
DECODE_NEC	IRremote.h	37;"	d
DECODE_PANASONIC	IRremote.h	43;"	d
DECODE_PRONTO	IRremote.h	76;"	d
DECODE_RC5	IRremote.h	31;"	d
DECODE_RC6	IRremote.h	34;"	d
DECODE_SAMSUNG	IRremote.h	49;"	d
DECODE_SANYO	IRremote.h	61;"	d
DECODE_SHARP	IRremote.h	70;"	d
DECODE_SONY	IRremote.h	40;"	d
DECODE_WHYNTER	IRremote.h	52;"	d
DENON	IRremote.h	/^		DENON,$/;"	e	enum:__anon1
DISH	IRremote.h	/^		DISH,$/;"	e	enum:__anon1
DISH_BITS	ir_Dish.cpp	24;"	d	file:
DISH_BIT_MARK	ir_Dish.cpp	27;"	d	file:
DISH_HDR_MARK	ir_Dish.cpp	25;"	d	file:
DISH_HDR_SPACE	ir_Dish.cpp	26;"	d	file:
DISH_ONE_SPACE	ir_Dish.cpp	28;"	d	file:
DISH_RPT_SPACE	ir_Dish.cpp	30;"	d	file:
DISH_ZERO_SPACE	ir_Dish.cpp	29;"	d	file:
EXTERN	IRremoteInt.h	35;"	d
EXTERN	IRremoteInt.h	37;"	d
FNV_BASIS_32	irRecv.cpp	176;"	d	file:
FNV_PRIME_32	irRecv.cpp	175;"	d	file:
GAP_TICKS	IRremoteInt.h	134;"	d
HDR_MARK	ir_Denon.cpp	24;"	d	file:
HDR_MARK	ir_Template.cpp	107;"	d	file:
HDR_SPACE	ir_Denon.cpp	25;"	d	file:
HDR_SPACE	ir_Template.cpp	108;"	d	file:
IR_GLOBAL	IRremote.cpp	22;"	d	file:
IR_GLOBAL	IRremote.cpp	25;"	d	file:
IR_USE_TIMER1	IRremoteInt.h	163;"	d
IR_USE_TIMER1	IRremoteInt.h	192;"	d
IR_USE_TIMER2	IRremoteInt.h	156;"	d
IR_USE_TIMER2	IRremoteInt.h	182;"	d
IR_USE_TIMER2	IRremoteInt.h	188;"	d
IR_USE_TIMER2	IRremoteInt.h	197;"	d
IR_USE_TIMER4_HS	IRremoteInt.h	169;"	d
IR_USE_TIMER_CMT	IRremoteInt.h	173;"	d
IR_USE_TIMER_TPM1	IRremoteInt.h	177;"	d
IRrecv	IRremote.h	/^class IRrecv$/;"	c
IRrecv	irRecv.cpp	/^IRrecv::IRrecv (int recvpin)$/;"	f	class:IRrecv
IRremote_h	IRremote.h	19;"	d
IRremoteint_h	IRremoteInt.h	18;"	d
IRsend	IRremote.h	/^		IRsend () { }$/;"	f	class:IRsend
IRsend	IRremote.h	/^class IRsend$/;"	c
ISR	IRremoteInt.h	479;"	d
ISR	IRremoteInt.h	481;"	d
ISR	IRremoteInt.h	529;"	d
ISR	IRremoteInt.h	531;"	d
ISR	irISR.cpp	/^ISR (TIMER_INTR_NAME)$/;"	f
JVC	IRremote.h	/^		JVC,$/;"	e	enum:__anon1
JVC_BITS	ir_JVC.cpp	12;"	d	file:
JVC_BIT_MARK	ir_JVC.cpp	15;"	d	file:
JVC_HDR_MARK	ir_JVC.cpp	13;"	d	file:
JVC_HDR_SPACE	ir_JVC.cpp	14;"	d	file:
JVC_ONE_SPACE	ir_JVC.cpp	16;"	d	file:
JVC_RPT_LENGTH	ir_JVC.cpp	18;"	d	file:
JVC_ZERO_SPACE	ir_JVC.cpp	17;"	d	file:
LG	IRremote.h	/^		LG,$/;"	e	enum:__anon1
LG_BITS	ir_LG.cpp	12;"	d	file:
LG_BIT_MARK	ir_LG.cpp	16;"	d	file:
LG_HDR_MARK	ir_LG.cpp	14;"	d	file:
LG_HDR_SPACE	ir_LG.cpp	15;"	d	file:
LG_ONE_SPACE	ir_LG.cpp	17;"	d	file:
LG_RPT_LENGTH	ir_LG.cpp	19;"	d	file:
LG_ZERO_SPACE	ir_LG.cpp	18;"	d	file:
LTOL	IRremoteInt.h	129;"	d
MARK	IRremoteInt.h	142;"	d
MARK_EXCESS	IRremoteInt.h	122;"	d
MATCH	IRremote.cpp	/^int  MATCH (int measured,  int desired)$/;"	f
MATCH_MARK	IRremote.cpp	/^int  MATCH_MARK (int measured_ticks,  int desired_us)$/;"	f
MATCH_SPACE	IRremote.cpp	/^int  MATCH_SPACE (int measured_ticks,  int desired_us)$/;"	f
MIN_RC5_SAMPLES	ir_RC5_RC6.cpp	50;"	d	file:
MIN_RC6_SAMPLES	ir_RC5_RC6.cpp	123;"	d	file:
MITSUBISHI	IRremote.h	/^		MITSUBISHI,$/;"	e	enum:__anon1
MITSUBISHI_BITS	ir_Mitsubishi.cpp	14;"	d	file:
MITSUBISHI_HDR_SPACE	ir_Mitsubishi.cpp	19;"	d	file:
MITSUBISHI_ONE_MARK	ir_Mitsubishi.cpp	20;"	d	file:
MITSUBISHI_ZERO_MARK	ir_Mitsubishi.cpp	21;"	d	file:
NEC	IRremote.h	/^		NEC,$/;"	e	enum:__anon1
NEC_BITS	ir_NEC.cpp	12;"	d	file:
NEC_BIT_MARK	ir_NEC.cpp	15;"	d	file:
NEC_HDR_MARK	ir_NEC.cpp	13;"	d	file:
NEC_HDR_SPACE	ir_NEC.cpp	14;"	d	file:
NEC_ONE_SPACE	ir_NEC.cpp	16;"	d	file:
NEC_RPT_SPACE	ir_NEC.cpp	18;"	d	file:
NEC_ZERO_SPACE	ir_NEC.cpp	17;"	d	file:
ONE_SPACE	ir_Denon.cpp	28;"	d	file:
ONE_SPACE	ir_Template.cpp	111;"	d	file:
OTHER	ir_Template.cpp	114;"	d	file:
PANASONIC	IRremote.h	/^		PANASONIC,$/;"	e	enum:__anon1
PANASONIC_BITS	ir_Panasonic.cpp	12;"	d	file:
PANASONIC_BIT_MARK	ir_Panasonic.cpp	15;"	d	file:
PANASONIC_HDR_MARK	ir_Panasonic.cpp	13;"	d	file:
PANASONIC_HDR_SPACE	ir_Panasonic.cpp	14;"	d	file:
PANASONIC_ONE_SPACE	ir_Panasonic.cpp	16;"	d	file:
PANASONIC_ZERO_SPACE	ir_Panasonic.cpp	17;"	d	file:
PRONTO	IRremote.h	/^		PRONTO,$/;"	e	enum:__anon1
PRONTO_FALLBACK	IRremote.h	91;"	d
PRONTO_FALLBACK	irPronto.cpp	7;"	d	file:
PRONTO_NOFALLBACK	IRremote.h	92;"	d
PRONTO_NOFALLBACK	irPronto.cpp	8;"	d	file:
PRONTO_ONCE	IRremote.h	89;"	d
PRONTO_ONCE	irPronto.cpp	5;"	d	file:
PRONTO_REPEAT	IRremote.h	90;"	d
PRONTO_REPEAT	irPronto.cpp	6;"	d	file:
RAWBUF	IRremoteInt.h	43;"	d
RC5	IRremote.h	/^		RC5,$/;"	e	enum:__anon1
RC5_RPT_LENGTH	ir_RC5_RC6.cpp	52;"	d	file:
RC5_T1	ir_RC5_RC6.cpp	51;"	d	file:
RC6	IRremote.h	/^		RC6,$/;"	e	enum:__anon1
RC6_HDR_MARK	ir_RC5_RC6.cpp	124;"	d	file:
RC6_HDR_SPACE	ir_RC5_RC6.cpp	125;"	d	file:
RC6_RPT_LENGTH	ir_RC5_RC6.cpp	127;"	d	file:
RC6_T1	ir_RC5_RC6.cpp	126;"	d	file:
REPEAT	IRremote.h	162;"	d
SAMSUNG	IRremote.h	/^		SAMSUNG,$/;"	e	enum:__anon1
SAMSUNG_BITS	ir_Samsung.cpp	12;"	d	file:
SAMSUNG_BIT_MARK	ir_Samsung.cpp	15;"	d	file:
SAMSUNG_HDR_MARK	ir_Samsung.cpp	13;"	d	file:
SAMSUNG_HDR_SPACE	ir_Samsung.cpp	14;"	d	file:
SAMSUNG_ONE_SPACE	ir_Samsung.cpp	16;"	d	file:
SAMSUNG_RPT_SPACE	ir_Samsung.cpp	18;"	d	file:
SAMSUNG_ZERO_SPACE	ir_Samsung.cpp	17;"	d	file:
SANYO	IRremote.h	/^		SANYO,$/;"	e	enum:__anon1
SANYO_BITS	ir_Sanyo.cpp	15;"	d	file:
SANYO_DOUBLE_SPACE_USECS	ir_Sanyo.cpp	20;"	d	file:
SANYO_HDR_MARK	ir_Sanyo.cpp	16;"	d	file:
SANYO_HDR_SPACE	ir_Sanyo.cpp	17;"	d	file:
SANYO_ONE_MARK	ir_Sanyo.cpp	18;"	d	file:
SANYO_RPT_LENGTH	ir_Sanyo.cpp	21;"	d	file:
SANYO_ZERO_MARK	ir_Sanyo.cpp	19;"	d	file:
SEND_AIWA_RC_T501	IRremote.h	56;"	d
SEND_DENON	IRremote.h	74;"	d
SEND_DISH	IRremote.h	68;"	d
SEND_JVC	IRremote.h	47;"	d
SEND_LG	IRremote.h	59;"	d
SEND_MITSUBISHI	IRremote.h	65;"	d
SEND_NEC	IRremote.h	38;"	d
SEND_PANASONIC	IRremote.h	44;"	d
SEND_PRONTO	IRremote.h	77;"	d
SEND_PRONTO	irPronto.cpp	4;"	d	file:
SEND_RC5	IRremote.h	32;"	d
SEND_RC6	IRremote.h	35;"	d
SEND_SAMSUNG	IRremote.h	50;"	d
SEND_SANYO	IRremote.h	62;"	d
SEND_SHARP	IRremote.h	71;"	d
SEND_SONY	IRremote.h	41;"	d
SEND_WHYNTER	IRremote.h	53;"	d
SHARP	IRremote.h	/^		SHARP,$/;"	e	enum:__anon1
SHARP_BITS	ir_Sharp.cpp	25;"	d	file:
SHARP_BIT_MARK	ir_Sharp.cpp	26;"	d	file:
SHARP_GAP	ir_Sharp.cpp	29;"	d	file:
SHARP_ONE_SPACE	ir_Sharp.cpp	27;"	d	file:
SHARP_RPT_SPACE	ir_Sharp.cpp	30;"	d	file:
SHARP_TOGGLE_MASK	ir_Sharp.cpp	32;"	d	file:
SHARP_ZERO_SPACE	ir_Sharp.cpp	28;"	d	file:
SONY	IRremote.h	/^		SONY,$/;"	e	enum:__anon1
SONY_BITS	ir_Sony.cpp	12;"	d	file:
SONY_DOUBLE_SPACE_USECS	ir_Sony.cpp	18;"	d	file:
SONY_HDR_MARK	ir_Sony.cpp	13;"	d	file:
SONY_HDR_SPACE	ir_Sony.cpp	14;"	d	file:
SONY_ONE_MARK	ir_Sony.cpp	15;"	d	file:
SONY_RPT_LENGTH	ir_Sony.cpp	17;"	d	file:
SONY_ZERO_MARK	ir_Sony.cpp	16;"	d	file:
SPACE	IRremoteInt.h	143;"	d
STATE_IDLE	IRremoteInt.h	59;"	d
STATE_MARK	IRremoteInt.h	60;"	d
STATE_OVERFLOW	IRremoteInt.h	63;"	d
STATE_SPACE	IRremoteInt.h	61;"	d
STATE_STOP	IRremoteInt.h	62;"	d
SYSCLOCK	IRremoteInt.h	100;"	d
SYSCLOCK	IRremoteInt.h	98;"	d
TEST	irPronto.cpp	1;"	d	file:
TICKS_HIGH	IRremoteInt.h	137;"	d
TICKS_LOW	IRremoteInt.h	136;"	d
TIMER_CONFIG_KHZ	IRremoteInt.h	216;"	d
TIMER_CONFIG_KHZ	IRremoteInt.h	275;"	d
TIMER_CONFIG_KHZ	IRremoteInt.h	313;"	d
TIMER_CONFIG_KHZ	IRremoteInt.h	349;"	d
TIMER_CONFIG_KHZ	IRremoteInt.h	395;"	d
TIMER_CONFIG_KHZ	IRremoteInt.h	431;"	d
TIMER_CONFIG_KHZ	IRremoteInt.h	491;"	d
TIMER_CONFIG_KHZ	IRremoteInt.h	532;"	d
TIMER_CONFIG_NORMAL	IRremoteInt.h	228;"	d
TIMER_CONFIG_NORMAL	IRremoteInt.h	235;"	d
TIMER_CONFIG_NORMAL	IRremoteInt.h	283;"	d
TIMER_CONFIG_NORMAL	IRremoteInt.h	321;"	d
TIMER_CONFIG_NORMAL	IRremoteInt.h	362;"	d
TIMER_CONFIG_NORMAL	IRremoteInt.h	403;"	d
TIMER_CONFIG_NORMAL	IRremoteInt.h	439;"	d
TIMER_CONFIG_NORMAL	IRremoteInt.h	505;"	d
TIMER_CONFIG_NORMAL	IRremoteInt.h	540;"	d
TIMER_COUNT_TOP	IRremoteInt.h	224;"	d
TIMER_DISABLE_INTR	IRremoteInt.h	213;"	d
TIMER_DISABLE_INTR	IRremoteInt.h	266;"	d
TIMER_DISABLE_INTR	IRremoteInt.h	269;"	d
TIMER_DISABLE_INTR	IRremoteInt.h	310;"	d
TIMER_DISABLE_INTR	IRremoteInt.h	346;"	d
TIMER_DISABLE_INTR	IRremoteInt.h	392;"	d
TIMER_DISABLE_INTR	IRremoteInt.h	428;"	d
TIMER_DISABLE_INTR	IRremoteInt.h	474;"	d
TIMER_DISABLE_INTR	IRremoteInt.h	526;"	d
TIMER_DISABLE_PWM	IRremoteInt.h	211;"	d
TIMER_DISABLE_PWM	IRremoteInt.h	261;"	d
TIMER_DISABLE_PWM	IRremoteInt.h	308;"	d
TIMER_DISABLE_PWM	IRremoteInt.h	344;"	d
TIMER_DISABLE_PWM	IRremoteInt.h	390;"	d
TIMER_DISABLE_PWM	IRremoteInt.h	426;"	d
TIMER_DISABLE_PWM	IRremoteInt.h	469;"	d
TIMER_DISABLE_PWM	IRremoteInt.h	524;"	d
TIMER_ENABLE_INTR	IRremoteInt.h	212;"	d
TIMER_ENABLE_INTR	IRremoteInt.h	265;"	d
TIMER_ENABLE_INTR	IRremoteInt.h	268;"	d
TIMER_ENABLE_INTR	IRremoteInt.h	309;"	d
TIMER_ENABLE_INTR	IRremoteInt.h	345;"	d
TIMER_ENABLE_INTR	IRremoteInt.h	391;"	d
TIMER_ENABLE_INTR	IRremoteInt.h	427;"	d
TIMER_ENABLE_INTR	IRremoteInt.h	473;"	d
TIMER_ENABLE_INTR	IRremoteInt.h	525;"	d
TIMER_ENABLE_PWM	IRremoteInt.h	210;"	d
TIMER_ENABLE_PWM	IRremoteInt.h	260;"	d
TIMER_ENABLE_PWM	IRremoteInt.h	307;"	d
TIMER_ENABLE_PWM	IRremoteInt.h	343;"	d
TIMER_ENABLE_PWM	IRremoteInt.h	389;"	d
TIMER_ENABLE_PWM	IRremoteInt.h	425;"	d
TIMER_ENABLE_PWM	IRremoteInt.h	465;"	d
TIMER_ENABLE_PWM	IRremoteInt.h	523;"	d
TIMER_INTR_NAME	IRremoteInt.h	214;"	d
TIMER_INTR_NAME	IRremoteInt.h	273;"	d
TIMER_INTR_NAME	IRremoteInt.h	311;"	d
TIMER_INTR_NAME	IRremoteInt.h	347;"	d
TIMER_INTR_NAME	IRremoteInt.h	393;"	d
TIMER_INTR_NAME	IRremoteInt.h	429;"	d
TIMER_INTR_NAME	IRremoteInt.h	475;"	d
TIMER_INTR_NAME	IRremoteInt.h	527;"	d
TIMER_PWM_PIN	IRremoteInt.h	245;"	d
TIMER_PWM_PIN	IRremoteInt.h	247;"	d
TIMER_PWM_PIN	IRremoteInt.h	249;"	d
TIMER_PWM_PIN	IRremoteInt.h	251;"	d
TIMER_PWM_PIN	IRremoteInt.h	292;"	d
TIMER_PWM_PIN	IRremoteInt.h	294;"	d
TIMER_PWM_PIN	IRremoteInt.h	296;"	d
TIMER_PWM_PIN	IRremoteInt.h	298;"	d
TIMER_PWM_PIN	IRremoteInt.h	330;"	d
TIMER_PWM_PIN	IRremoteInt.h	332;"	d
TIMER_PWM_PIN	IRremoteInt.h	376;"	d
TIMER_PWM_PIN	IRremoteInt.h	378;"	d
TIMER_PWM_PIN	IRremoteInt.h	412;"	d
TIMER_PWM_PIN	IRremoteInt.h	414;"	d
TIMER_PWM_PIN	IRremoteInt.h	448;"	d
TIMER_PWM_PIN	IRremoteInt.h	450;"	d
TIMER_PWM_PIN	IRremoteInt.h	518;"	d
TIMER_PWM_PIN	IRremoteInt.h	548;"	d
TIMER_RESET	IRremoteInt.h	209;"	d
TIMER_RESET	IRremoteInt.h	259;"	d
TIMER_RESET	IRremoteInt.h	306;"	d
TIMER_RESET	IRremoteInt.h	342;"	d
TIMER_RESET	IRremoteInt.h	388;"	d
TIMER_RESET	IRremoteInt.h	424;"	d
TIMER_RESET	IRremoteInt.h	460;"	d
TIMER_RESET	IRremoteInt.h	522;"	d
TOLERANCE	IRremoteInt.h	128;"	d
UNKNOWN	IRremote.h	/^		UNKNOWN      = -1,$/;"	e	enum:__anon1
UNUSED	IRremote.h	/^		UNUSED       =  0,$/;"	e	enum:__anon1
USECPERTICK	IRremoteInt.h	125;"	d
UTOL	IRremoteInt.h	130;"	d
WHYNTER	IRremote.h	/^		WHYNTER,$/;"	e	enum:__anon1
WHYNTER_BITS	ir_Whynter.cpp	12;"	d	file:
WHYNTER_BIT_MARK	ir_Whynter.cpp	15;"	d	file:
WHYNTER_HDR_MARK	ir_Whynter.cpp	13;"	d	file:
WHYNTER_HDR_SPACE	ir_Whynter.cpp	14;"	d	file:
WHYNTER_ONE_MARK	ir_Whynter.cpp	16;"	d	file:
WHYNTER_ONE_SPACE	ir_Whynter.cpp	17;"	d	file:
WHYNTER_ZERO_MARK	ir_Whynter.cpp	18;"	d	file:
WHYNTER_ZERO_SPACE	ir_Whynter.cpp	19;"	d	file:
ZERO_SPACE	ir_Denon.cpp	29;"	d	file:
ZERO_SPACE	ir_Template.cpp	112;"	d	file:
_GAP	IRremoteInt.h	133;"	d
address	IRremote.h	/^		unsigned int           address;      \/\/ Used by Panasonic & Sharp [16-bits]$/;"	m	class:decode_results
bits	IRremote.h	/^		int                    bits;         \/\/ Number of bits in decoded value$/;"	m	class:decode_results
blink13	irRecv.cpp	/^void  IRrecv::blink13 (int blinkflag)$/;"	f	class:IRrecv
blinkflag	IRremoteInt.h	/^		uint8_t       blinkflag;       \/\/ true -> enable blinking of pin 13 on IR processing$/;"	m	struct:__anon2
byp	irPronto.cpp	/^bool  byp (char** pcp)$/;"	f
cbi	IRremoteInt.h	107;"	d
compare	irRecv.cpp	/^int  IRrecv::compare (unsigned int oldval,  unsigned int newval)$/;"	f	class:IRrecv
decode	irRecv.cpp	/^int  IRrecv::decode (decode_results *results)$/;"	f	class:IRrecv
decodeAiwaRCT501	ir_Aiwa.cpp	/^bool  IRrecv::decodeAiwaRCT501 (decode_results *results)$/;"	f	class:IRrecv
decodeDenon	ir_Denon.cpp	/^bool  IRrecv::decodeDenon (decode_results *results)$/;"	f	class:IRrecv
decodeHash	irRecv.cpp	/^long  IRrecv::decodeHash (decode_results *results)$/;"	f	class:IRrecv
decodeJVC	ir_JVC.cpp	/^bool  IRrecv::decodeJVC (decode_results *results)$/;"	f	class:IRrecv
decodeLG	ir_LG.cpp	/^bool  IRrecv::decodeLG (decode_results *results)$/;"	f	class:IRrecv
decodeMitsubishi	ir_Mitsubishi.cpp	/^bool  IRrecv::decodeMitsubishi (decode_results *results)$/;"	f	class:IRrecv
decodeNEC	ir_NEC.cpp	/^bool  IRrecv::decodeNEC (decode_results *results)$/;"	f	class:IRrecv
decodePanasonic	ir_Panasonic.cpp	/^bool  IRrecv::decodePanasonic (decode_results *results)$/;"	f	class:IRrecv
decodeRC5	ir_RC5_RC6.cpp	/^bool  IRrecv::decodeRC5 (decode_results *results)$/;"	f	class:IRrecv
decodeRC6	ir_RC5_RC6.cpp	/^bool  IRrecv::decodeRC6 (decode_results *results)$/;"	f	class:IRrecv
decodeSAMSUNG	ir_Samsung.cpp	/^bool  IRrecv::decodeSAMSUNG (decode_results *results)$/;"	f	class:IRrecv
decodeSanyo	ir_Sanyo.cpp	/^bool  IRrecv::decodeSanyo (decode_results *results)$/;"	f	class:IRrecv
decodeShuzu	ir_Template.cpp	/^bool  IRrecv::decodeShuzu (decode_results *results)$/;"	f	class:IRrecv
decodeSony	ir_Sony.cpp	/^bool  IRrecv::decodeSony (decode_results *results)$/;"	f	class:IRrecv
decodeWhynter	ir_Whynter.cpp	/^bool  IRrecv::decodeWhynter (decode_results *results)$/;"	f	class:IRrecv
decode_results	IRremote.h	/^class decode_results$/;"	c
decode_type	IRremote.h	/^		decode_type_t          decode_type;  \/\/ UNKNOWN, NEC, SONY, RC5, ...$/;"	m	class:decode_results
decode_type_t	IRremote.h	/^decode_type_t;$/;"	t	typeref:enum:__anon1
enableIRIn	irRecv.cpp	/^void  IRrecv::enableIRIn ( )$/;"	f	class:IRrecv
enableIROut	irPronto.cpp	/^	void  enableIROut (int freq)  { printf("\\nFreq = %d KHz\\n", freq); }$/;"	f
enableIROut	irSend.cpp	/^void  IRsend::enableIROut (int khz)$/;"	f	class:IRsend
getRClevel	ir_RC5_RC6.cpp	/^int  IRrecv::getRClevel (decode_results *results,  int *offset,  int *used,  int t1)$/;"	f	class:IRrecv
htob	irPronto.cpp	/^uint8_t  htob (char ch)$/;"	f
htow	irPronto.cpp	/^uint16_t  htow (char* cp)$/;"	f
irparams	IRremoteInt.h	/^EXTERN  volatile irparams_t  irparams;$/;"	v
irparams_t	IRremoteInt.h	/^irparams_t;$/;"	t	typeref:struct:__anon2
isblank	irPronto.cpp	/^bool  isblank (char ch)$/;"	f
ishex	irPronto.cpp	/^bool  ishex (char ch)$/;"	f
main	irPronto.cpp	/^int  main ( )$/;"	f
mark	irPronto.cpp	/^	void  mark        (int t)     { printf("+%d," , t); }$/;"	f
mark	irSend.cpp	/^void  IRsend::mark (int time)$/;"	f	class:IRsend
overflow	IRremote.h	/^		int                    overflow;     \/\/ true iff IR raw code too long$/;"	m	class:decode_results
overflow	IRremoteInt.h	/^		uint8_t       overflow;        \/\/ Raw buffer overflow occurred$/;"	m	struct:__anon2
prontoTest	irPronto.cpp	/^char  prontoTest[] =$/;"	v
rawbuf	IRremote.h	/^		volatile unsigned int  *rawbuf;      \/\/ Raw intervals in 50uS ticks$/;"	m	class:decode_results
rawbuf	IRremoteInt.h	/^		unsigned int  rawbuf[RAWBUF];  \/\/ raw data$/;"	m	struct:__anon2
rawlen	IRremote.h	/^		int                    rawlen;       \/\/ Number of records in rawbuf$/;"	m	class:decode_results
rawlen	IRremoteInt.h	/^		uint8_t       rawlen;          \/\/ counter of entries in rawbuf$/;"	m	struct:__anon2
rcvstate	IRremoteInt.h	/^		uint8_t       rcvstate;        \/\/ State Machine state$/;"	m	struct:__anon2
recvpin	IRremoteInt.h	/^		uint8_t       recvpin;         \/\/ Pin connected to IR data from detector$/;"	m	struct:__anon2
resume	irRecv.cpp	/^void  IRrecv::resume ( )$/;"	f	class:IRrecv
sbi	IRremoteInt.h	111;"	d
sendAiwaRCT501	ir_Aiwa.cpp	/^void  IRsend::sendAiwaRCT501 (int code)$/;"	f	class:IRsend
sendDISH	ir_Dish.cpp	/^void  IRsend::sendDISH (unsigned long data,  int nbits)$/;"	f	class:IRsend
sendDenon	ir_Denon.cpp	/^void  IRsend::sendDenon (unsigned long data,  int nbits)$/;"	f	class:IRsend
sendJVC	ir_JVC.cpp	/^void  IRsend::sendJVC (unsigned long data,  int nbits,  bool repeat)$/;"	f	class:IRsend
sendNEC	ir_NEC.cpp	/^void  IRsend::sendNEC (unsigned long data,  int nbits)$/;"	f	class:IRsend
sendPanasonic	ir_Panasonic.cpp	/^void  IRsend::sendPanasonic (unsigned int address,  unsigned long data)$/;"	f	class:IRsend
sendPronto	irPronto.cpp	/^bool sendPronto (char* s,  bool repeat,  bool fallback)$/;"	f
sendRC5	ir_RC5_RC6.cpp	/^void  IRsend::sendRC5 (unsigned long data,  int nbits)$/;"	f	class:IRsend
sendRC6	ir_RC5_RC6.cpp	/^void  IRsend::sendRC6 (unsigned long data,  int nbits)$/;"	f	class:IRsend
sendRaw	irSend.cpp	/^void  IRsend::sendRaw (unsigned int buf[],  int len,  int hz)$/;"	f	class:IRsend
sendSAMSUNG	ir_Samsung.cpp	/^void  IRsend::sendSAMSUNG (unsigned long data,  int nbits)$/;"	f	class:IRsend
sendSharp	ir_Sharp.cpp	/^void  IRsend::sendSharp (unsigned int address,  unsigned int command)$/;"	f	class:IRsend
sendSharpRaw	ir_Sharp.cpp	/^void  IRsend::sendSharpRaw (unsigned long data,  int nbits)$/;"	f	class:IRsend
sendShuzu	ir_Template.cpp	/^void  IRsend::sendShuzu (unsigned long data,  int nbits)$/;"	f	class:IRsend
sendSony	ir_Sony.cpp	/^void  IRsend::sendSony (unsigned long data,  int nbits)$/;"	f	class:IRsend
sendWhynter	ir_Whynter.cpp	/^void  IRsend::sendWhynter (unsigned long data,  int nbits)$/;"	f	class:IRsend
space	irPronto.cpp	/^	void  space       (int t)     { printf("-%d, ", t); }$/;"	f
space	irSend.cpp	/^void  IRsend::space (int time)$/;"	f	class:IRsend
timer	IRremoteInt.h	/^		unsigned int  timer;           \/\/ State timer, counts 50uS ticks.$/;"	m	struct:__anon2
value	IRremote.h	/^		unsigned long          value;        \/\/ Decoded value [max 32-bits]$/;"	m	class:decode_results
